1) Write a Python program to check if a number is positive, negative or zero?
 --->
num = int(input("Enter a number: "))
if num > 0:
    print("The number is positive")
elif num == 0:
    print("The number is zero")
else:
    print("The number is negative")


2) Write a Python program to get the Factorial number of given number?
--->
def factorial(n):
    if n < 0:
        return None
    elif n == 0:
        return 1
    else:
        return n * factorial(n - 1)

3) Write a Python program to get the Fibonacci series of given range?
--->
num = int(input("Enter the range number :"))
first_val = 0
secound_val = 1
for n in range(0,num):
    if(n<=1):
        next = n
    else:
        next = first_val + secound_val
        first_val = secound_val
        secound_val = next
    print(next)

4) How memory is managed in Python?
---> Memory management operates at three levels: hardware, operating system and program/application
The management capabilities at each level work together to optimize memory availability and efficiency.
Memory management at the hardware level.

5) What is the purpose continue statement in python?
The continue keyword is used to end the current iteration in a for loop (or a while loop), and continues to the next iteration.

6) Write python program that swap two number with temp variable and without temp variable?
--->
a = 10
b = 20

temp = a
a = b
b = temp

print("swap")
print("a =", a)
print("b =", b)

7) Write a Python program to find whether a given number is even or odd print out an appropriate message to the user?
--->
num = int(input("Enter a number: "))
if num % 2 == 0:
    print(num, "is even")
else:
    print(num, "is odd")

8) Write a Python program to test whether a passed letter is a vowel or not?
--->
letter = input("Enter a letter: ")

if letter in ["a","e","i","o","u",]:
    print(letter, "is a vowel")
else:
    print(letter, "is not a vowel")

9) Write a Python program to sum of three given integers. However,if two values are equal sum will be zero?
--->
def sum_three_numbers(a, b, c):
    if a == b or b == c or a == c:
        print(0)
    else:
        print(a + b + c)


10) Write a Python program that will return true if the two given integer values are equal or their sum or difference is 5?
--->
def check_integer_values(a, b):
    if a == b or abs(a-b) == 5 or a+b == 5:
        return True
    else:
        return False

11) write a python program to sum of the first n positive integers?
--->
num = int(input("Enter a Positive integers : "))
sum  = sum(range(num+1))

print("Sum of the first", num ,"positive integers:",sum)


12) Write a Python program to calculate the length of a string?
--->
string = "Hello, World!"
length = len(string)
print("The length of the string is:", length)

13) Write a Python program to count the number of characters (character
frequency) in a string?
--->
string = input("Enter a string: ")
freq = {}

for char in string:
    if char in freq:
        freq[char] += 1
    else:
        freq[char] = 1

print("Character frequency:")
for char, count in freq.items():
    print(f"{char}: {count}")


14) What are negative indexes and why are they used?
--->
Negative Indexing is used to in Python to begin slicing from the end of the string i.e. the last. 
Slicing in Python gets a sub-string from a string. 
The slicing range is set as parameters i.e. start, stop and step.

15) Write a Python program to count occurrences of a substring in a string.
--->
str = input("Enter your string : ")

for i in range(len(str)):
    for j in range(i+1,(len(str)+1)):
        print(str[i:j],end=" ")
    print()
    

16) Write a Python program to count the occurrences of each word in a given sentence?
--->
def count (str): #decler a function(count is function) and  pass one perameter, str in name of parameter 

    counts = {} #create a  dictnory it is a empty 
    sentence = str.split() # 

    for i in sentence:# loop is execute and check the condition / sentence store in i variable.
        if i in counts:# loop is is execute and check the condition 
            counts[i] += 1 # count a word and store in counts variable
        else:
            counts[i] = 1# word store in counts variable
    return counts # return in counts

# function calling
sentence = input("Enter your sentence : ")# crete variable and accept value from user.
print(count(sentence))# print and count sentence

17) Write a Python program to get a single string from two given strings,separated by a space and swap the first two characters of each string?
--->
def string(a1,a2):# create a function and pass two parameter
    a = a1[:2] + a2[2:] # first string two char and second string after two char addition
    b = a2[:2] + a1[2:] # seond string two char and first string after two char addition

    return a + ' ' + b # return a , b and pass a1 to a2
# calling function
str1 = input("Enter the string1 : ")#taking a variable and accept the value from user.
str2 = input("Enter the string2 : ")#taking a variable and accept the value fron user.
print(string(str1,str2))#print

18)Write a Python program to add 'ing' at the end of a given string (lengthshould be at least 3). If the given string already ends with 'ing' then add
'ly' instead if the string length of the given string is less than 3, leave it unchanged?
--->
def ing_ly (string):# create a function (ing_ly) and pass one parameter
    if len(string) >= 3: # string length greatter then 3 then block is execute
        if string.endswith("ing"): # string end with ing than block is execute
            string+= 'ly' # add ly in string
        else: # string not end with ing and execute
            string+= 'ing'# add ing in string
        return string

# calling fuction 
string = input("Enter the string : ")# taking a variable and accept the value from user.
print(ing_ly(string))# print and pass the parameter.

19)Write a Python program to find the first appearance of the substring'not' and 'poor' from a given string, if 'not' follows the 'poor', replace the
whole 'not'...'poor' substring with 'good'. Return the resulting string?
--->
def not_poor(string):
    # Finding the index of "not" and "poor" in the string
    not_index = string.find('not')
    poor_index = string.find('poor')
    
    # Checking if "not" appears before "poor", and replacing it with "good"
    if not_index != -1 and poor_index != -1 and not_index < poor_index:
        return string[:not_index] + 'good' + string[poor_index+4:]
    else:
        return string

20) Write a Python function that takes a list of words and returns the length of the longest one?
--->
def find_longest_word(words):
    # Initializing the longest length to be 0
    longest_length = 0
    
    # Looping through all the words in the list
    for word in words:
        # If the length of the current word is greater than the longest length so far, update the longest length
        if len(word) > longest_length:
            longest_length = len(word)
    
    # Return the longest length
    return longest_length

21) Write a Python function to reverses a string if its length is a multiple 4.
--->
def reverse_string(string):
    # Checking if the length of the string is a multiple of 4
    if len(string) % 4 == 0:
        # Reversing the string
        reversed_string = ''.join(reversed(string))
        return reversed_string
    else:
        return string

22) Write a Python program to get a string made of the first 2 and the last 2 chars from a given a string.
If the string length is less than 2, return instead of the empty string. 
--->
def get_string(string):
    # Check if the length of the string is less than 2
    if len(string) < 2:
        return ''
    else:
        # Get the first two and last two characters of the string and concatenate them
        new_string = string[:2] + string[-2:]
        return new_string


23) Write a Python function to insert a string in the middle of a string?
--->
def insert_string_middle(string, string_to_insert):
    middle_index = len(string) // 2
    new_string = string[:middle_index] + string_to_insert + string[middle_index:]
    return new_string

 







